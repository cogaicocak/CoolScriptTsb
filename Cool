-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Variables 
local player = Players.LocalPlayer
local connection = nil
local aimConnection = nil

local targetPlayer = nil
local DISTANCE = 4
local isEnabled = false
local isAimbotEnabled = false

-- Zoom variables
local MIN_ZOOM = 5
local MAX_ZOOM = 50
local currentZoom = 20
local ZOOM_SPEED = 2

-- Variables for Auto Kills
local autoKillsEnabled = false
local skillThreads = {}
local m1Thread = nil

-- Create ScreenGui
local gui = Instance.new("ScreenGui")
gui.Name = "TeleportAndAimGUI"
gui.ResetOnSpawn = false

-- Create main frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 200, 0, 400)
mainFrame.Position = UDim2.new(0.8, 0, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = gui

-- Add rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

-- Create title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Text = "Game Controls"
title.TextSize = 18
title.Font = Enum.Font.GothamBold
title.Parent = mainFrame

-- Add corner to title
local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 10)
titleCorner.Parent = title

-- Create player list
local playerList = Instance.new("ScrollingFrame")
playerList.Name = "PlayerList"
playerList.Size = UDim2.new(0.9, 0, 0.4, 0)
playerList.Position = UDim2.new(0.05, 0, 0.15, 0)
playerList.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
playerList.BorderSizePixel = 0
playerList.ScrollBarThickness = 4
playerList.Parent = mainFrame

-- Add corner to player list
local listCorner = Instance.new("UICorner")
listCorner.CornerRadius = UDim.new(0, 10)
listCorner.Parent = playerList

-- Create buttons
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0.9, 0, 0, 40)
toggleButton.Position = UDim2.new(0.05, 0, 0.6, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Text = "START FOLLOW"
toggleButton.TextSize = 18
toggleButton.Font = Enum.Font.GothamBold
toggleButton.Parent = mainFrame

local aimToggleButton = Instance.new("TextButton")
aimToggleButton.Name = "AimToggleButton"
aimToggleButton.Size = UDim2.new(0.9, 0, 0, 40)
aimToggleButton.Position = UDim2.new(0.05, 0, 0.7, 0)
aimToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
aimToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
aimToggleButton.Text = "START AUTO AIM"
aimToggleButton.TextSize = 18
aimToggleButton.Font = Enum.Font.GothamBold
aimToggleButton.Parent = mainFrame

-- Add Auto Kills button
local autoKillsButton = Instance.new("TextButton")
autoKillsButton.Name = "AutoKillsButton"
autoKillsButton.Size = UDim2.new(0.9, 0, 0, 40)
autoKillsButton.Position = UDim2.new(0.05, 0, 0.8, 0)
autoKillsButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
autoKillsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
autoKillsButton.Text = "START AUTO KILLS"
autoKillsButton.TextSize = 18
autoKillsButton.Font = Enum.Font.GothamBold
autoKillsButton.Parent = mainFrame

-- Add corners to buttons
for _, button in pairs({toggleButton, aimToggleButton, autoKillsButton}) do
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 10)
    buttonCorner.Parent = button
end

-- Function to change character to Hunter
local function changeToHunter()
    local args = {
        [1] = {
            ["Goal"] = "Change Character",
            ["Character"] = "Hunter"
        }
    }
    if player.Character and player.Character:FindFirstChild("Communicate") then
        player.Character.Communicate:FireServer(unpack(args))
    end
end

-- Function to perform M1 click
local function performM1Click()
    local args1 = {
        [1] = {
            ["Mobile"] = true,
            ["Goal"] = "LeftClick"
        }
    }
    
    if player.Character and player.Character:FindFirstChild("Communicate") then
        player.Character.Communicate:FireServer(unpack(args1))
    end
end

-- Function to release M1
local function releaseM1Click()
    local args = {
        [1] = {
            ["Goal"] = "LeftClickRelease",
            ["Mobile"] = true
        }
    }
    
    if player.Character and player.Character:FindFirstChild("Communicate") then
        player.Character.Communicate:FireServer(unpack(args))
    end
end

-- Function to use skill
local function useSkill(skillName)
    local args = {
        [1] = {
            ["Tool"] = player.Backpack:FindFirstChild(skillName),
            ["Goal"] = "Console Move",
            ["ToolName"] = skillName
        }
    }
    if player.Character and player.Character:FindFirstChild("Communicate") then
        player.Character.Communicate:FireServer(unpack(args))
    end
end

-- Combined Auto Kills function
local function toggleAutoKills()
    autoKillsEnabled = not autoKillsEnabled
    
    if autoKillsEnabled then
        autoKillsButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        autoKillsButton.Text = "STOP AUTO KILLS"
        
        -- Change to Hunter first
        changeToHunter()
        
        -- Wait a short moment for character change to complete
        task.wait(1)
        
        -- Start skill loops
        local skillNames = {
            "Flowing Water",
            "Lethal Whirlwind Stream",
            "Hunter's Grasp"
        }
        
        for _, skillName in ipairs(skillNames) do
            local thread = task.spawn(function()
                while autoKillsEnabled do
                    useSkill(skillName)
                    task.wait()
                end
            end)
            table.insert(skillThreads, thread)
        end
        
        -- Start auto M1 (chỉ click một lần và giữ)
        m1Thread = task.spawn(function()
            performM1Click()
        end)
    else
        autoKillsButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        autoKillsButton.Text = "START AUTO KILLS"
        
        -- Release M1 first
        releaseM1Click()
        
        -- Stop skill threads
        for _, thread in ipairs(skillThreads) do
            task.cancel(thread)
        end
        skillThreads = {}
        
        -- Stop M1 thread
        if m1Thread then
            task.cancel(m1Thread)
            m1Thread = nil
        end
    end
end

-- Handle zoom function
local function handleZoom()
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseWheel then
            if input.Position.Z > 0 then
                currentZoom = math.max(MIN_ZOOM, currentZoom - ZOOM_SPEED)
            else
                currentZoom = math.min(MAX_ZOOM, currentZoom + ZOOM_SPEED)
            end
        end
    end)
end

-- Function to update player list
local function updatePlayerList()
    for _, child in pairs(playerList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    local yPosition = 5
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player then
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(0.9, 0, 0, 30)
            button.Position = UDim2.new(0.05, 0, 0, yPosition)
            button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.Text = plr.Name
            button.TextSize = 14
            button.Font = Enum.Font.Gotham
            button.Parent = playerList
            
            local playerButtonCorner = Instance.new("UICorner")
            playerButtonCorner.CornerRadius = UDim.new(0, 5)
            playerButtonCorner.Parent = button
            
            button.MouseButton1Click:Connect(function()
                targetPlayer = plr
                for _, btn in pairs(playerList:GetChildren()) do
                    if btn:IsA("TextButton") then
                        btn.BackgroundColor3 = btn == button and Color3.fromRGB(0, 120, 255) or Color3.fromRGB(55, 55, 55)
                    end
                end
            end)
            
            yPosition = yPosition + 35
        end
    end
    
    playerList.CanvasSize = UDim2.new(0, 0, 0, yPosition)
end

-- Function to get position behind target
local function getPositionBehindTarget(targetCFrame)
    return targetCFrame * CFrame.new(0, 0, DISTANCE)
end

-- Function to aim at target
local function aimAtTarget()
    if not targetPlayer or not targetPlayer.Character or not player.Character then
        return
    end
    
    local targetHead = targetPlayer.Character:FindFirstChild("Head")
    local playerHead = player.Character:FindFirstChild("Head")
    local playerHumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    
    if targetHead and playerHead and playerHumanoidRootPart then
        local camera = workspace.CurrentCamera
        local targetPos = targetHead.Position
        local playerPos = playerHead.Position
        
        local lookVector = (targetPos - playerPos).Unit
        playerHumanoidRootPart.CFrame = CFrame.lookAt(playerHumanoidRootPart.Position, targetPos)
        
        local cameraPos = playerPos - lookVector * currentZoom
        camera.CFrame = CFrame.new(cameraPos, targetPos)
    end
end

-- Toggle teleport function
local function toggleTeleport()
    isEnabled = not isEnabled
    
    if isEnabled then
        if targetPlayer then
            toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            toggleButton.Text = "STOP FOLLOW"
            
            connection = RunService.Heartbeat:Connect(function()
                if not targetPlayer or not targetPlayer.Character or not player.Character then
                    return
                end
                
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                local playerRoot = player.Character:FindFirstChild("HumanoidRootPart")
                
                if targetRoot and playerRoot then
                    local newPosition = getPositionBehindTarget(targetRoot.CFrame)
                    playerRoot.CFrame = newPosition
                end
            end)
        else
            isEnabled = false
            toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            toggleButton.Text = "SELECT PLAYER"
        end
    else
        if connection then
            connection:Disconnect()
            connection = nil
        end
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        toggleButton.Text = "START FOLLOW"
    end
end

-- Toggle aimbot function
local function toggleAimbot()
    isAimbotEnabled = not isAimbotEnabled
    
    if isAimbotEnabled then
        if targetPlayer then
            aimToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            aimToggleButton.Text = "STOP AUTO AIM"
            
            aimConnection = RunService.RenderStepped:Connect(function()
                aimAtTarget()
            end)
        else
            isAimbotEnabled = false
            aimToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            aimToggleButton.Text = "SELECT PLAYER"
        end
    else
        if aimConnection then
            aimConnection:Disconnect()
            aimConnection = nil
        end
        aimToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        aimToggleButton.Text = "START AUTO AIM"
    end
end

-- Make GUI draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Connect buttons
toggleButton.MouseButton1Click:Connect(toggleTeleport)
aimToggleButton.MouseButton1Click:Connect(toggleAimbot)
autoKillsButton.MouseButton1Click:Connect(toggleAutoKills)

-- Initialize zoom handling
handleZoom()

-- Update player list when players join/leave
Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(updatePlayerList)

-- Initial player list update
updatePlayerList()

-- Parent GUI to PlayerGui
gui.Parent = player:WaitForChild("PlayerGui")

-- Cleanup on script destroy
script.Destroyed:Connect(function()
    if connection then
        connection:Disconnect()
    end
    if aimConnection then
        aimConnection:Disconnect()
    end
    if m1Thread then
        task.cancel(m1Thread)
    end
    for _, thread in ipairs(skillThreads) do
        task.cancel(thread)
    end
    gui:Destroy()
end)
