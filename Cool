-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- Variables
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local connection = nil
local aimConnection = nil
local skillConnection = nil
local targetPlayer = nil

-- Configuration
local SKILLS = {
    {key = Enum.KeyCode.One, cooldown = 22},
    {key = Enum.KeyCode.Two, cooldown = 20},
    {key = Enum.KeyCode.Three, cooldown = 25},
    {key = Enum.KeyCode.Four, cooldown = 1}
}

local lastSkillUse = {0, 0, 0, 0}
local isAutoSkillEnabled = false

-- Create GUI elements
local gui = Instance.new("ScreenGui")
gui.Name = "CombatGUI"
gui.ResetOnSpawn = false
gui.Parent = player.PlayerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 200, 0, 300)
mainFrame.Position = UDim2.new(0.8, 0, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = gui

-- Add rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

-- Create skill button
local skillButton = Instance.new("TextButton")
skillButton.Name = "SkillButton"
skillButton.Size = UDim2.new(0.9, 0, 0, 40)
skillButton.Position = UDim2.new(0.05, 0, 0, 220)
skillButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
skillButton.TextColor3 = Color3.fromRGB(255, 255, 255)
skillButton.Text = "AUTO SKILLS: OFF"
skillButton.TextSize = 16
skillButton.Font = Enum.Font.GothamBold
skillButton.Parent = mainFrame

local buttonCorner = Instance.new("UICorner")
buttonCorner.CornerRadius = UDim.new(0, 5)
buttonCorner.Parent = skillButton

-- Create skill indicators
local indicatorFrame = Instance.new("Frame")
indicatorFrame.Name = "SkillIndicators"
indicatorFrame.Size = UDim2.new(0.9, 0, 0, 40)
indicatorFrame.Position = UDim2.new(0.05, 0, 0, 170)
indicatorFrame.BackgroundTransparency = 1
indicatorFrame.Parent = mainFrame

-- Create individual skill indicators
for i = 1, 4 do
    local indicator = Instance.new("Frame")
    indicator.Name = "Skill"..i
    indicator.Size = UDim2.new(0.2, -5, 1, 0)
    indicator.Position = UDim2.new(0.25 * (i-1), 2, 0, 0)
    indicator.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 5)
    indicatorCorner.Parent = indicator
    
    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1, 0, 1, 0)
    text.BackgroundTransparency = 1
    text.Text = tostring(i)
    text.TextColor3 = Color3.fromRGB(255, 255, 255)
    text.TextSize = 16
    text.Font = Enum.Font.GothamBold
    text.Parent = indicator
    
    indicator.Parent = indicatorFrame
end

-- Function to safely simulate key press
local function pressKey(keyCode)
    pcall(function()
        VirtualInputManager:SendKeyEvent(true, keyCode, false, game)
        task.wait(0.1)
        VirtualInputManager:SendKeyEvent(false, keyCode, false, game)
    end)
end

-- Function to check if target is in range
local function isTargetInRange()
    if not targetPlayer or not targetPlayer.Character then return false end
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return false end
    
    local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    local playerRoot = player.Character.HumanoidRootPart
    
    if not targetRoot then return false end
    
    -- Check if target is within 50 studs
    return (targetRoot.Position - playerRoot.Position).Magnitude <= 50
end

-- Function to use skills
local function useSkills()
    if not isAutoSkillEnabled or not isTargetInRange() then return end
    
    local currentTime = tick()
    
    for i, skillData in ipairs(SKILLS) do
        if currentTime - lastSkillUse[i] >= skillData.cooldown then
            -- Use skill
            pressKey(skillData.key)
            lastSkillUse[i] = currentTime
            
            -- Update indicator
            local indicator = indicatorFrame:FindFirstChild("Skill"..i)
            if indicator then
                indicator.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                game:GetService("TweenService"):Create(
                    indicator,
                    TweenInfo.new(skillData.cooldown),
                    {BackgroundColor3 = Color3.fromRGB(0, 255, 0)}
                ):Play()
            end
        end
    end
end

-- Toggle auto skills function
local function toggleAutoSkills()
    isAutoSkillEnabled = not isAutoSkillEnabled
    skillButton.Text = "AUTO SKILLS: " .. (isAutoSkillEnabled and "ON" or "OFF")
    skillButton.BackgroundColor3 = isAutoSkillEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
    
    if isAutoSkillEnabled then
        -- Start skill loop
        if skillConnection then skillConnection:Disconnect() end
        skillConnection = RunService.Heartbeat:Connect(useSkills)
    else
        -- Stop skill loop
        if skillConnection then
            skillConnection:Disconnect()
            skillConnection = nil
        end
    end
end

-- Connect button
skillButton.MouseButton1Click:Connect(toggleAutoSkills)

-- Player selection function (add this to your existing player selection code)
local function selectTarget(plr)
    targetPlayer = plr
    -- Reset skill timers when new target is selected
    for i = 1, 4 do
        lastSkillUse[i] = 0
    end
end

-- Cleanup
gui.Destroying:Connect(function()
    if skillConnection then
        skillConnection:Disconnect()
    end
end)

-- Error handling for character respawn
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
end)
