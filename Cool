-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Variables
local player = Players.LocalPlayer
local connection = nil
local aimConnection = nil
local targetPlayer = nil
local DISTANCE = 10
local isEnabled = false
local isAimbotEnabled = false

-- Zoom variables
local MIN_ZOOM = 5
local MAX_ZOOM = 50
local currentZoom = 20
local ZOOM_SPEED = 2

-- Function to check if player's health is below 20
local function isLowHealth(plr)
    if not plr or not plr.Character then return false end
    local humanoid = plr.Character:FindFirstChild("Humanoid")
    return humanoid and humanoid.Health < 20
end

-- Create ScreenGui (GUI code remains the same)
local gui = Instance.new("ScreenGui")
-- ... (All GUI creation code stays the same until the updatePlayerList function)

-- Modified updatePlayerList function
local function updatePlayerList()
    for _, child in pairs(playerList:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    local yPosition = 5
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and isLowHealth(plr) then  -- Only add players with low health
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(0.9, 0, 0, 30)
            button.Position = UDim2.new(0.05, 0, 0, yPosition)
            button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
            button.TextColor3 = Color3.fromRGB(255, 255, 255)
            button.Text = plr.Name .. " [" .. math.floor(plr.Character.Humanoid.Health) .. " HP]"
            button.TextSize = 14
            button.Font = Enum.Font.Gotham
            button.Parent = playerList
            
            local playerButtonCorner = Instance.new("UICorner")
            playerButtonCorner.CornerRadius = UDim.new(0, 5)
            playerButtonCorner.Parent = button
            
            button.MouseButton1Click:Connect(function()
                if isLowHealth(plr) then  -- Double check health when clicking
                    targetPlayer = plr
                    for _, btn in pairs(playerList:GetChildren()) do
                        if btn:IsA("TextButton") then
                            btn.BackgroundColor3 = btn == button and Color3.fromRGB(0, 120, 255) or Color3.fromRGB(55, 55, 55)
                        end
                    end
                else
                    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
                    wait(0.5)
                    updatePlayerList()
                end
            end)
            
            yPosition = yPosition + 35
        end
    end
    
    playerList.CanvasSize = UDim2.new(0, 0, 0, yPosition)
end

-- Modified toggleTeleport function
local function toggleTeleport()
    isEnabled = not isEnabled
    
    if isEnabled then
        if targetPlayer and isLowHealth(targetPlayer) then
            toggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            toggleButton.Text = "STOP FOLLOW"
            
            connection = RunService.Heartbeat:Connect(function()
                if not targetPlayer or not targetPlayer.Character or not player.Character or not isLowHealth(targetPlayer) then
                    toggleTeleport()  -- Stop if target's health goes above threshold
                    return
                end
                
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                local playerRoot = player.Character:FindFirstChild("HumanoidRootPart")
                
                if targetRoot and playerRoot then
                    local newPosition = getPositionBehindTarget(targetRoot.CFrame)
                    playerRoot.CFrame = newPosition
                end
            end)
        else
            isEnabled = false
            toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            toggleButton.Text = "SELECT PLAYER"
        end
    else
        if connection then
            connection:Disconnect()
            connection = nil
        end
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        toggleButton.Text = "START FOLLOW"
    end
end

-- Modified toggleAimbot function
local function toggleAimbot()
    isAimbotEnabled = not isAimbotEnabled
    
    if isAimbotEnabled then
        if targetPlayer and isLowHealth(targetPlayer) then
            aimToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            aimToggleButton.Text = "STOP AUTO AIM"
            
            aimConnection = RunService.RenderStepped:Connect(function()
                if not isLowHealth(targetPlayer) then
                    toggleAimbot()  -- Stop if target's health goes above threshold
                    return
                end
                aimAtTarget()
            end)
        else
            isAimbotEnabled = false
            aimToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            aimToggleButton.Text = "SELECT PLAYER"
        end
    else
        if aimConnection then
            aimConnection:Disconnect()
            aimConnection = nil
        end
        aimToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        aimToggleButton.Text = "START AUTO AIM"
    end
end

-- The rest of the code remains the same
-- ... (All remaining functions and event connections stay unchanged)

-- Add health update listener
RunService.Heartbeat:Connect(function()
    if targetPlayer and not isLowHealth(targetPlayer) then
        -- Reset targeting if current target's health goes above threshold
        targetPlayer = nil
        if isEnabled then toggleTeleport() end
        if isAimbotEnabled then toggleAimbot() end
    end
    updatePlayerList()  -- Update the list to reflect current health states
end)

-- Parent GUI to PlayerGui
gui.Parent = player:WaitForChild("PlayerGui")

-- Cleanup on script destroy
script.Destroyed:Connect(function()
    if connection then
        connection:Disconnect()
    end
    if aimConnection then
        aimConnection:Disconnect()
    end
    gui:Destroy()
end)
